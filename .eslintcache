[{"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/App.tsx":"1","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/reportWebVitals.ts":"2","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/HostComponent.tsx":"3","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/AttendantsComponent.tsx":"4","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/index.tsx":"5","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/Components/Video/index.tsx":"6","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/lib/PeerConnection.ts":"7"},{"size":439,"mtime":1611068084052,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1610840844878,"results":"10","hashOfConfig":"9"},{"size":7360,"mtime":1611101230523,"results":"11","hashOfConfig":"9"},{"size":7431,"mtime":1611102096175,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1610840844877,"results":"13","hashOfConfig":"9"},{"size":920,"mtime":1611099717939,"results":"14","hashOfConfig":"9"},{"size":1086,"mtime":1611098901327,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tatsw1",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/App.tsx",[],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/reportWebVitals.ts",[],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/HostComponent.tsx",["31","32"],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/AttendantsComponent.tsx",["33","34"],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/index.tsx",[],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/Components/Video/index.tsx",["35"],"import React, { useEffect, useRef, useState } from 'react';\nimport Styled from 'styled-components';\n\nconst Container = Styled.div`\n    position: relative;\n    display: inline-block;\n    width: 240px;\n    height: 240px;\n    margin: 5px;\n`;\n\nconst VideoContainer = Styled.video`\n    width: 240px;\n    height: 240px;\n    background-color: black;\n`;\n\ninterface Props {\n    stream: MediaStream;\n    muted?: boolean;\n}\n\nconst Video = ({stream, muted}: Props) => {\n    const ref = useRef<HTMLVideoElement>(null);\n    const [isMuted, setIsMuted] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (ref.current) ref.current.srcObject = stream;\n        if (muted) setIsMuted(muted);\n    })\n\n    return (\n        <Container>\n            <VideoContainer \n                ref={ref}\n                muted={isMuted}\n                autoPlay\n            ></VideoContainer>\n        </Container>\n    );\n}\n\nexport default Video;","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/lib/PeerConnection.ts",[],{"ruleId":"36","severity":1,"message":"37","line":10,"column":10,"nodeType":"38","messageId":"39","endLine":10,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":108,"column":16,"nodeType":"42","endLine":108,"endColumn":66},{"ruleId":"36","severity":1,"message":"37","line":10,"column":10,"nodeType":"38","messageId":"39","endLine":10,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":110,"column":16,"nodeType":"42","endLine":110,"endColumn":66},{"ruleId":"40","severity":1,"message":"43","line":27,"column":5,"nodeType":"38","endLine":27,"endColumn":14,"suggestions":"44"},"@typescript-eslint/no-unused-vars","'socket' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Assignments to the 'sendPC' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect contains a call to 'setIsMuted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stream, muted] as a second argument to the useEffect Hook.",["45"],{"desc":"46","fix":"47"},"Add dependencies array: [stream, muted]",{"range":"48","text":"49"},[689,689],", [stream, muted]"]