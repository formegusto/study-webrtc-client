[{"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/App.tsx":"1","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/reportWebVitals.ts":"2","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/HostComponent.tsx":"3","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/AttendantsComponent.tsx":"4","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/index.tsx":"5","/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/Components/Video/index.tsx":"6"},{"size":517,"mtime":1610847657825,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610840844878,"results":"9","hashOfConfig":"8"},{"size":5796,"mtime":1610895067534,"results":"10","hashOfConfig":"8"},{"size":5857,"mtime":1610894932967,"results":"11","hashOfConfig":"8"},{"size":500,"mtime":1610840844877,"results":"12","hashOfConfig":"8"},{"size":1103,"mtime":1610865385279,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mqgvu8",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/App.tsx",["27"],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/reportWebVitals.ts",[],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/HostComponent.tsx",["28","29","30","31"],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/AttendantsComponent.tsx",["32","33"],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/index.tsx",[],"/Users/formegusto/Desktop/formegusto/study/study-webrtc-client/src/component/Components/Video/index.tsx",["34"],"import React, { useEffect, useRef, useState } from 'react';\nimport Styled from 'styled-components';\n\nconst Container = Styled.div`\n    position: relative;\n    display: inline-block;\n    width: 240px;\n    height: 270px;\n    margin: 5px;\n`;\n\nconst VideoContainer = Styled.video`\n    width: 240px;\n    height: 240px;\n    background-color: black;\n`;\n\nconst UserLabel = Styled.p`\n    display: inline-block;\n    position: absolute;\n    top: 230px;\n    left: 0px;\n`;\n\ninterface Props {\n    email: string;\n    stream: MediaStream;\n    muted?: boolean;\n}\n\nconst Video = ({email, stream, muted}: Props) => {\n    const ref = useRef<HTMLVideoElement>(null);\n    const [isMuted, setIsMuted] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (ref.current) ref.current.srcObject = stream;\n        if (muted) setIsMuted(muted);\n    })\n\n    return (\n        <Container>\n            <VideoContainer \n                ref={ref}\n                muted={isMuted}\n                autoPlay\n            ></VideoContainer>\n            <UserLabel>{email}</UserLabel>\n        </Container>\n    );\n}\n\nexport default Video;",{"ruleId":null,"fatal":true,"severity":2,"message":"35","line":14,"column":0},{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":13},{"ruleId":"36","severity":1,"message":"40","line":10,"column":10,"nodeType":"38","messageId":"39","endLine":10,"endColumn":16},{"ruleId":"36","severity":1,"message":"41","line":11,"column":10,"nodeType":"38","messageId":"39","endLine":11,"endColumn":15},{"ruleId":"42","severity":1,"message":"43","line":132,"column":6,"nodeType":"44","endLine":132,"endColumn":8,"suggestions":"45"},{"ruleId":"36","severity":1,"message":"40","line":9,"column":10,"nodeType":"38","messageId":"39","endLine":9,"endColumn":16},{"ruleId":"42","severity":1,"message":"46","line":132,"column":6,"nodeType":"44","endLine":132,"endColumn":8,"suggestions":"47"},{"ruleId":"42","severity":1,"message":"48","line":35,"column":5,"nodeType":"38","endLine":35,"endColumn":14,"suggestions":"49"},"Parsing error: Unexpected token. Did you mean `{'}'}` or `&rbrace;`?","@typescript-eslint/no-unused-vars","'Video' is defined but never used.","Identifier","unusedVar","'socket' is assigned a value but never used.","'users' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createPeerConnection', 'match.params', and 'pcs'. Either include them or remove the dependency array.","ArrayExpression",["50"],"React Hook useEffect has missing dependencies: 'createPeerConnection' and 'pcs'. Either include them or remove the dependency array.",["51"],"React Hook useEffect contains a call to 'setIsMuted'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [stream, muted] as a second argument to the useEffect Hook.",["52"],{"desc":"53","fix":"54"},{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},"Update the dependencies array to be: [createPeerConnection, match.params, pcs]",{"range":"59","text":"60"},"Update the dependencies array to be: [createPeerConnection, pcs]",{"range":"61","text":"62"},"Add dependencies array: [stream, muted]",{"range":"63","text":"64"},[4106,4108],"[createPeerConnection, match.params, pcs]",[4161,4163],"[createPeerConnection, pcs]",[829,829],", [stream, muted]"]